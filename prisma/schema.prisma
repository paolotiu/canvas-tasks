generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Credential {
  id                  String               @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  type                String
  key                 Json
  userId              String               @db.Uuid
  user                User                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  connectedGoogleTask ConnectedGoogleTask?

  @@unique([id, userId])
}

model ConnectedGoogleTask {
  id                      String                        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  integrationId           String                        @unique @db.Uuid
  userId                  String                        @db.Uuid
  includeDiscussionTopics Boolean                       @default(true)
  includeAssignments      Boolean                       @default(true)
  includeQuizzes          Boolean                       @default(true)
  connectedTaskId         String
  createdAt               DateTime                      @default(now())
  updatedAt               DateTime                      @updatedAt
  integration             Credential                    @relation(fields: [integrationId], references: [id], onDelete: Cascade)
  user                    User                          @relation(fields: [userId], references: [id], onDelete: Cascade)
  plannerItems            PlannerItemOnConnGoogleTask[]

  @@unique([userId, integrationId])
}

model PlannerItemOnConnGoogleTask {
  googleTaskId          String
  plannerItemId         String
  connectedGoogleTaskId String              @db.Uuid
  connectedTask         ConnectedGoogleTask @relation(fields: [connectedGoogleTaskId], references: [id], onDelete: Cascade)
  plannerItem           PlannerItem         @relation(fields: [plannerItemId], references: [id], onDelete: Cascade)

  @@id([plannerItemId, connectedGoogleTaskId])
}

model PlannerItem {
  id                   String                        @id
  updatedAt            DateTime
  connectedGoogleTasks PlannerItemOnConnGoogleTask[]
}

model User {
  id                  String                @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  canvasToken         String?
  email               String?
  connectedGoogleTask ConnectedGoogleTask[]
  credentials         Credential[]
}
